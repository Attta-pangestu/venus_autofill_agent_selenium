# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
# According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
# However, in case of collaboration, if having platform-specific dependencies or dependencies
# having different hashes across platforms, it may be better to ignore Pipfile.lock.
# Pipfile.lock

# poetry
# Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
# For more info, see: https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file
# poetry.lock

# pdm
# Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
# pdm.lock
# .pdm.toml

# PEP 582; used by e.g. pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static analyzer
.pytype/

# Cython debug symbols
cython_debug/

# VS Code
.vscode/

# Databases
*.sqlite
*.sqlite3
*.db
*.db-journal

# Log files
*.log

# Node.js
node_modules/
npm-debug.log
yarn-error.log

# HTML/JSON Reports
*.html
*.json

# Large binary files identified in your project
*.dll
*.exe
*.lib
*.pyd

# Browser automation specific
chromedriver
geckodriver
*.crdownload
*.tmp
*.temp

# Selenium specific
/webdriver/
/webdriver-manager/

# Cache directories
.cache/
.tmp/
.temp/

# Virtual environments
*/venv/
*/env/
*/mcp-env/

# Compiled outputs
*.o
*.obj
*.so
*.dylib
*.dll
*.exe

# Ignore all pycache directories
**/__pycache__/
**/.pytest_cache/

# Ignore large data files
*.csv
*.xlsx
*.xls
*.pkl
*.pickle
*.h5
*.hdf5

# Ignore browser profiles and data
*/BrowserProfile/
*/UserData/

# Ignore memory bank build outputs
/memory-bank/build/

# Ignore test reports and outputs
*/test-results/
*/reports/

# Ignore system-specific files
.DS_Store
Thumbs.db
desktop.ini

# Ignore compiled Python files in specific directories
**/*.cpython-*.pyc
**/*.pyc